@model BlogPost

@{
    ViewData["Title"] = "Details";

    IEnumerable<BlogPostComment> GetComments(BlogPostComment parent)
    {
        if (parent.ParentId != null)
        {
            yield return parent;
        }
        foreach (var item in parent.Children.SelectMany(c => GetComments(c)))
        {
            yield return item;
        }
    }

}

<div role="tabpanel" class="tab-pane fade active in" id="blog">

    <div class="inside-sec blog">
        <!-- BIO AND SKILLS -->
        <h5 class="tittle">BLOG POST</h5>

        <!-- Blog -->
        <article class="blog-post width-100 padding-25">

            <div class="post-img">
                <img src="~/uploads/images/@Model.ImagePath" alt="blog-image">
                <span class="date-in">@Model.PublishedDate?.ToString("dd MMM")</span>
            </div>

            <!-- BLOG DETAIL -->
            <h4 class="font-normal">@Model.Title</h4>
            <ul class="post-info">
                <li> <i class="fa fa-comments-o"></i>@Model.Comments.Count() </li>
                <li> <i class="fa fa-eye"></i>565 </li>
                <li> <i class="fa fa-bookmark-o"></i>Photography </li>
                <li>  </li>
            </ul>

            @Html.Raw(Model.Body)

            <div class="next-prev">
                <div class="row">
                    <div class="col-md-6 text-left"><a href="#." class="font-16px font-crimson text-uppercase"><i class="fa fa-long-arrow-left margin-right-15"></i> PREVIOUS Article</a></div>
                    <div class="col-md-6 text-right"><a href="#." class="font-16px font-crimson text-uppercase">Next Article<i class="fa fa-long-arrow-right margin-left-15"></i></a></div>
                </div>
            </div>


            <div class="comments">

                <!-- Main Heading -->
                <div class="heading-side-bar margin-bottom-50 margin-top-100">
                    <h4>Comment (@Model.Comments.Count())</h4>
                </div>
                <div class="commentall">
                <ul>

                    @foreach (var comment in Model.Comments.Where(c => c.ParentId == null))
                    {
                        <!-- Comments -->
                        <li class="margin-bottom-30 comment" id="c-@comment.Id" data-comment-id="@comment.Id">
                            <div class="media">
                                <div class="media-left">
                                    <div class="avatar"><img src="images/avatar-1.jpg" alt=""></div>
                                </div>
                                <div class="media-body">
                                    <div class="a-com">
                                        <span class="a-name text-color-primary">@($"{comment.CreatedByUser?.Name} {comment.CreatedByUser?.Surname}")</span><span class="date">@comment.CreatedDate.ToString("MMMM d,yyyy HH:mm")</span>
                                        <p class="margin-top-20"> 
                                            @comment.Text.ToPlainText();
                                        </p>
                                        <a class="text-right btn-comment-reply"> REPLAY <i class="fa fa-reply"></i></a>
                                    </div>
                                </div>
                            </div>
                        </li>
                            @*<partial name="_Comment" model="@Model.Comments" />*@
                        @foreach (var subComment in GetComments(comment))
                        {
                            <!-- Comments Replay -->
                            <li class="com-reply comment" id="c-@subComment.Id" data-comment-id="@subComment.Id">
                                <div class="media">
                                    <div class="media-left">
                                        <div class="avatar"><img src="images/avatar-2.jpg" alt=""></div>
                                    </div>
                                    <div class="media-body">
                                        <div class="a-com">
                                            <span class="a-name ">@($"{subComment.CreatedByUser?.Name} {subComment.CreatedByUser?.Surname}")</span><span class="date">@subComment.CreatedDate.ToString("MMMM d,yyyy HH:mm")</span>
                                            <p class="margin-top-20">
                                                <a href="#c-@subComment.ParentId">@@@subComment.Parent.CreatedByUser?.Name</a>
                                                @subComment.Text.ToPlainText();
                                            </p>
                                            <a class="text-right btn-comment-reply"> REPLAY <i class="fa fa-reply"></i></a>
                                        </div>
                                    </div>
                                </div>
                            </li>
                        }
                    }
                </ul>
                </div>
                    <span class="text-center more-comments"><a href="#.">MORE COMMENT <i class="fa fa-angle-down"></i></a></span>
                    <div class="comment-form">
                        <!-- Main Heading -->
                        <div class="heading-side-bar margin-bottom-50 margin-top-80">

                            <form method="post" id="replyForm">
                                <div id="replyToComment"></div>
                                <input type="hidden" name="PostId" value="@Model.Id" />
                                
                                        <textarea  name="Comment" placeholder="YOUR MESSAGE"></textarea>
                                    
                                        <button type="submit" class="btn btn-dark">POST COMMENT </button>
                   
                            </form>
                        </div>
                    </div>

            </div>

        </article>
    </div>
</div>

@section addcss{
    <style>
        #replyToComment{
            position:relative;
        }
        #replyToComment .remove-reply-selected{
            position:absolute;
            color: black;
            font-size: 4rem;
            left: 660px;
            top: 12px;
        }
    </style>
}

    @section addjs{
    <script>
        function rebindReply(){
            $('.btn-comment-reply').unbind('click').click(function (e) {
                e.preventDefault();

                $('#replyToComment').html('<a href="javascript:removeReplySelected()" class="remove-reply-selected">&times;<i class="fa fa-x"></i></a>').append($(e.currentTarget).closest('.comment').clone());
            });
        }
        $(document).ready(function () {
            rebindReply();

            $('#replyForm').submit(function(e){
                e.preventDefault();

                let formData = new FormData(e.currentTarget);

                let toCommentId = $('#replyToComment li.comment').data('comment-id');
                console.log($('#replyToComment li.comment').data('comment-id'));
                if(toCommentId != undefined)
                {
                    formData.set("commentId", toCommentId);
                    console.log(formData);
                }
                $.ajax({
                    url: `@Url.Action("Add")`,
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    dataType: 'json',
                    success: function(response){
                        console.log(response);
                    },
                    error: function (response) {

                        if(response.statusText == "parsererror"){
                            if(toCommentId != undefined){

                                $(response.responseText).insertAfter($(`#c-${toCommentId}`));

                                $('#replyToComment').html('')
                                e.currentTarget.reset();
                            }
                            else
                            {
                                $('div.commentall ul').append($(response.responseText));
                                $('#replyToComment').html('')
                                e.currentTarget.reset();
                                rebindReply();
                             }
                        }
                        console.warn(response);
                    }
                });
            });
        });
        function removeReplySelected() {
            $('#replyToComment').html('');
        }
    </script>
}
